.wrapper {
	width: 800px;
	margin: 0 auto;
}

.transform,
.transition,
.animation {
	border: 1px solid #999;
	margin: 20px 0;
	padding: 0 0;
}

.box {
	width: 200px;
	height: 200px;
}

.b1 {
	background-color: #89cff0;
	/*baby blue*/
}

.b2 {
	background-color: #de5d83;
	/*blush*/
}

.b3 {
	background-color: #9696ff;
	/*purple*/
}

.b4 {
	background-color: #e89380;
	/*orange*/
}

/* CSS Transition */
.transition .b1{
	transition: width 1000ms ease-in-out 0.1s;
}

.transition .b1:hover{
	width:480px;
}

.transition .b2{
	transition: width 1000ms, height 500ms;
	transition-timing-function: ease-out;
	transition-delay:0.2s, 0.7s;
}

.transition .b2:hover{
	width: 300px;
	height: 300px;
}

.transition .b3{
	transition: transform 1s cubic-bezier(.16,.56,.29,1);
}

.transition .b3:hover{
	transform: rotate(90deg);
}

.transition .b4{
	transition: all 0.3s ease-in;
}

.transition .b4:hover{
	background-color: #de5d83;
	border-radius: 30px;
}

/* CSS Transform */
.transform .box{
	transition: all 1s ease-out;
}

.transform .b1:hover{
	transform: translate(20px, -25px);
}

.transform .b2:hover{
	transform: scale(1.4);
}

.transform .b3{
	transform-origin: right top;
}

.transform .b3:hover{
	transform: rotate(45deg);
	/* transform-origin: right top; */
}

.transform .b4{
	transform: skewX(45deg) skewY(30deg);
}

.transform .b4:hover{
	transform: skewX(0) skewY(0);
}

/* CSS Animation */

@keyframes changeColor {
	from{
		background-color: #cc00cc;
	}

	to{
		background-color: #E89380;
	}
}

.animation .b1{
	animation-name: changeColor;
	animation-duration: 2s;
	animation-delay: 2s;
	animation-fill-mode: forwards;
}

@keyframes moveAround{
	0%{
		transform: translate(0,0);
	}

	25%{
		transform: translate(200px,0);
	}

	50%{
		transform: translate(200px,200px);
	}

	75%{
		transform: translate(0px,200px);
	}

	100%{
		transform: translate(0,0);
	}
	/* This value will create an animation of clockwise movement */
}

.animation .b2{
	animation: moveAround 2s;	
	animation-delay: 1s;
	animation-iteration-count: 3;
}

@keyframes transformeMe{
	0%{
		transform: scale(0.5) rotateX(0) translateX(0);
	}

	100%{
		transform: scale(1) rotateX(180deg) translateX(600px)
	}
}

.animation .b3{
	/* This will be the shorthand property > name, duration, timing function, delay, count, direction, fill */
	animation: transformeMe 1.5s ease-out 2s 12 alternate forwards;
}

.animation .b3:hover{
	animation-play-state: paused;
}

@keyframes r4ndom{
	0%{
		transform:rotate(0deg);
		background-color: #9696ff;
	}

	100%{
		transform: rotate(180deg);
		background-color: #89cff0;
	}
}

.animation .b4{
	animation: r4ndom 1s ease-out 2s 2 forwards;
}